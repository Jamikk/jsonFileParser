{"version":3,"sources":["components/App.js","utils/index.js","index.js"],"names":["App","state","isActive","error","result","errorMessage","onChange","event","_this","handleFiles","target","files","preventDefaultes","e","stopPropagation","preventDefault","dragEnter","setState","dragLeave","drop","dataTransfer","onReaderLoad","_ref","obj","test","decodeData","window","atob","split","JSON","parse","err","console","log","amount","recursive","key","node","hasOwnProperty","value","constructor","name","recursiveTreversalTree","_this2","this","File","FileReader","FileList","Blob","Error","jsonType","Array","from","forEach","file","size","type","reader","onload","readAsDataURL","_this$state","dropboxClassname","concat","react_default","a","createElement","className","onDragEnter","onDragOver","onDragLeave","onDrop","htmlFor","id","multiple","React","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e61e0d25.chunk.js","sourcesContent":["import React from 'react';\n\nimport { recursiveTreversalTree } from '../utils';\n\nimport './app.css';\n\n\nexport default class App extends React.Component {\n\n    state = {\n        isActive: false,\n        error: false,\n        result: 0,\n        errorMessage: ''\n    };\n\n    onChange = (event) => {\n        this.handleFiles(event.target.files);\n    };\n\n    preventDefaultes = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n    };\n\n    dragEnter = (e) => {\n        this.preventDefaultes(e);\n        this.setState({ isActive: true });\n    };\n\n    dragLeave = (e) => {\n        this.preventDefaultes(e);\n        this.setState({ isActive: false });\n    };\n\n    drop = (e) => {\n        this.preventDefaultes(e);\n        this.handleFiles(e.dataTransfer.files);\n        this.setState({ isActive: false });\n\n    };\n\n    onReaderLoad = ({ target }) => {\n        // Я не уверен как правильнее проверить что данные закодированны в base64\n        const jsonType = /\\/json;base64/i;\n        let obj;\n\n        try {\n            if (!jsonType.test(target.result)) {\n                obj = JSON.parse(target.result);\n            } else {\n                // Decode base64\n                const decodeData = window.atob(target.result.split(',')[1]);\n                obj = JSON.parse(decodeData);\n            }\n        } catch (err) {\n            console.log(err);\n            // TODO Вынести бы это в метод validateFile\n            this.setState({\n                errorMessage: 'JSON файл не валидный!',\n                error: true\n            });\n            return;\n        }\n\n        this.setState({\n            result: recursiveTreversalTree(obj),\n            error: false\n        });\n    };\n\n    handleFiles(files) {\n        if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n            throw Error('File API не поддерживается вашим браузером!');\n        }\n\n        const jsonType = /\\/json$/i;\n        const LIMIT_SIZE = 1024; // 1Mb\n\n        Array.from(files).forEach(file => {\n\n            if (file.size > LIMIT_SIZE) {\n                // TODO Вынести бы это в метод validateFile\n                this.setState({\n                    errorMessage: 'Размер файла слишком велик!',\n                    error: true\n                });\n                return;\n            }\n\n            if (!jsonType.test(file.type)) {\n                // TODO Вынести бы это в метод validateFile\n                this.setState({\n                    errorMessage: 'Недоспустимый формат файла',\n                    error: true\n                });\n                return;\n            }\n\n            const reader = new FileReader();\n            reader.onload = this.onReaderLoad;\n            reader.readAsDataURL(file);\n        });\n    }\n\n    render () {\n        const {\n            isActive,\n            error,\n            errorMessage,\n            result\n        } = this.state;\n\n        const dropboxClassname = `dropbox ${isActive ? 'highlight': ''}`;\n\n        return (\n            <div className=\"container\">\n                <p className=\"desc\">\n                    Нужно загрузить json файл (в том числе с использованием drag and drop).\n                    Если формат json верный, то рекурсивно посчитает и отобразит число объектов,\n                    если нет – сообщение об ошибке.\n                </p>\n                <div className={dropboxClassname}\n                     onDragEnter={this.dragEnter}\n                     onDragOver={this.preventDefaultes}\n                     onDragLeave={this.dragLeave}\n                     onDrop={this.drop}\n                >\n                    <form>\n                        <label htmlFor=\"file\" className=\"upload-file\">\n                            <span className=\"upload-file__title\">Выбрать файл для загрузки</span>\n                            <i className=\"upload-icon\"></i>\n                            <input type=\"file\"\n                                   id=\"file\"\n                                   name=\"files\"\n                                   multiple\n                                   onChange={this.onChange}\n                            />\n                        </label>\n                    </form>\n                </div>\n                {\n                    error\n                        ? <h1 className=\"result result-error\">{errorMessage}</h1>\n                        : <h1 className=\"result\">Количество объектов: <span>{result}</span></h1>\n                }\n            </div>\n        );\n    }\n}\n","export function recursiveTreversalTree (obj) {\n    let amount = 0;\n\n    function recursive(obj) {\n        for (let key in obj) {\n            const node = obj[key];\n\n            if (!obj.hasOwnProperty(key) || !isObject(node)) {\n                continue;\n            }\n\n            amount += 1;\n            recursive(node);\n        }\n    }\n\n    recursive(obj);\n    return amount;\n}\n\n\nfunction isObject (value) {\n    return typeof value === 'object'\n        && value.constructor.name === 'Object';\n}\n\n\n// TODO Не забыть написать тесты\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}